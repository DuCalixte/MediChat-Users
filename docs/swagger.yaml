definitions:
  models.Channel:
    properties:
      chatBot:
        type: boolean
      description:
        type: string
      isPrivate:
        type: boolean
      name:
        type: string
      ownerId:
        type: integer
      users:
        description: "WebSocket\t\t string\t\t`json:\"websocket\"  gorm:\"type:varchar(256)\"`"
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.User:
    properties:
      channels:
        items:
          $ref: '#/definitions/models.Channel'
        type: array
      email:
        type: string
      profile:
        $ref: '#/definitions/models.UserPref'
        type: object
    type: object
  models.UserPref:
    properties:
      color:
        type: string
      firstname:
        type: string
      gravatar:
        type: string
      isLocal:
        type: boolean
      lastname:
        type: string
      nickname:
        type: string
      status:
        type: string
      userId:
        type: integer
    type: object
info:
  contact:
    email: ducalixte.@gmail.com
    name: MediChat API Support
  description: A chat service api with websocket.
  license:
    name: MIT
    url: https://github.com/DuCalixte/MediChat-Users/blob/master/LICENSE
  termsOfService: http://swagger.io/terms/
  title: MediChat API
  version: "1.0"
paths:
  /api/signin:
    post:
      consumes:
      - application/json
      description: authenticates the user access and provides the user resource with a token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: object
          schema:
            type: string
      summary: Authenticate a user access
      tags:
      - signin
  /api/signup:
    post:
      consumes:
      - application/json
      description: authorizes the user access and provides the user resource with a token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: object
          schema:
            type: string
      summary: Authorize a user to access
      tags:
      - signin
  /api/v1/channels:
    get:
      consumes:
      - application/json
      description: get channels
      parameters:
      - description: name search by q
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            items:
              $ref: '#/definitions/models.Channel'
            type: array
      summary: List channels
    post:
      consumes:
      - application/json
      description: create a new channel
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: object
          schema:
            $ref: '#/definitions/models.Channel'
      summary: Create channel
      tags:
      - channels
  /api/v1/channels/{id}:
    get:
      consumes:
      - application/json
      description: get string by ID
      operationId: get-string-by-int
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/models.Channel'
      summary: Show information on specific channel
    put:
      consumes:
      - application/json
      description: Update by json channel
      parameters:
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Channel'
      summary: Update an channel
      tags:
      - channels
  /api/v1/userPrefs/{id}:
    get:
      consumes:
      - application/json
      description: provides user profile
      operationId: get-string-by-int
      parameters:
      - description: UserPref ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/models.UserPref'
      summary: Show information on specific user profile
    put:
      consumes:
      - application/json
      description: Update by json userPref
      parameters:
      - description: UserPref ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserPref'
      summary: Update an userPref
      tags:
      - userPrefs
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: get all users
      parameters:
      - description: name search by q
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: List all Users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: provides user information with preferences in models.UserPref and channels from models.Channel
      operationId: get-string-by-int
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/models.User'
      summary: Show information on specific user
  /user/{userId}/channel/{id}:
    get:
      consumes:
      - application/json
      description: gets User ID and Channel ID and creates a new client connection
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Channel ID
        in: path
        name: id
        required: true
        type: integer
      responses: {}
      summary: Connects a user on a channel to the websocket circuit
swagger: "2.0"
